openapi: 3.1.0
info:
  title: Response Validation API
  description: API for testing OpenAPI 3.1 response validation capabilities
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.example.com/v1
    description: Production server
  - url: https://staging-api.example.com/v1
    description: Staging server

paths:
  # 直接写response的端点 - 单个media-type
  /users/{id}:
    get:
      summary: Get user by ID
      description: Retrieve a specific user by their ID
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: User found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: User ID
                  name:
                    type: string
                    description: User name
                  email:
                    type: string
                    format: email
                    description: User email
                  created_at:
                    type: string
                    format: date-time
                    description: User creation timestamp
                required:
                  - id
                  - name
                  - email
                  - created_at
              examples:
                success:
                  summary: Successful response
                  value:
                    id: 1
                    name: "John Doe"
                    email: "john.doe@example.com"
                    created_at: "2024-01-15T10:30:00Z"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  code:
                    type: string
                    description: Error code
                required:
                  - error
                  - code
              examples:
                not_found:
                  summary: User not found
                  value:
                    error: "User not found"
                    code: "USER_NOT_FOUND"

  # 直接写response的端点 - 多个media-type
  /documents/{id}:
    get:
      summary: Get document by ID
      description: Retrieve a document in multiple formats
      operationId: getDocumentById
      parameters:
        - name: id
          in: path
          required: true
          description: Document ID
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-]+$'
      responses:
        '200':
          description: Document retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Document ID
                  title:
                    type: string
                    description: Document title
                  content:
                    type: string
                    description: Document content
                  format:
                    type: string
                    enum: [json, xml, text]
                    description: Document format
                  size:
                    type: integer
                    description: Document size in bytes
                required:
                  - id
                  - title
                  - content
                  - format
                  - size
              examples:
                json_document:
                  summary: JSON document
                  value:
                    id: "doc-123"
                    title: "Sample JSON Document"
                    content: '{"key": "value"}'
                    format: "json"
                    size: 25
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Document ID
                  title:
                    type: string
                    description: Document title
                  content:
                    type: string
                    description: Document content
                  format:
                    type: string
                    enum: [json, xml, text]
                    description: Document format
                  size:
                    type: integer
                    description: Document size in bytes
                required:
                  - id
                  - title
                  - content
                  - format
                  - size
              examples:
                xml_document:
                  summary: XML document
                  value:
                    id: "doc-456"
                    title: "Sample XML Document"
                    content: "<root><item>value</item></root>"
                    format: "xml"
                    size: 35
            text/plain:
              schema:
                type: string
                description: Plain text document content
              examples:
                text_document:
                  summary: Plain text document
                  value: "This is a plain text document content."
        '400':
          description: Invalid document ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  details:
                    type: object
                    properties:
                      field:
                        type: string
                        description: Field that caused the error
                      value:
                        type: string
                        description: Invalid value provided
                required:
                  - error
                  - details

  # 引用response components的端点 - 单个media-type
  /products/{id}:
    get:
      summary: Get product by ID
      description: Retrieve a specific product by its ID
      operationId: getProductById
      parameters:
        - name: id
          in: path
          required: true
          description: Product ID
          schema:
            type: string
            pattern: '^[A-Z]{2}[0-9]{6}$'
      responses:
        '200':
          $ref: '#/components/responses/ProductResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'

  # 引用response components的端点 - 多个media-type
  /files/{id}:
    get:
      summary: Get file by ID
      description: Retrieve a file in multiple formats
      operationId: getFileById
      parameters:
        - name: id
          in: path
          required: true
          description: File ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/MultiFormatFileResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'

  # 批量操作端点 - 使用引用response
  /users:
    post:
      summary: Create multiple users
      description: Create multiple users in a single request
      operationId: createUsers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  items:
                    $ref: '#/components/schemas/UserInput'
                  minItems: 1
                  maxItems: 100
              required:
                - users
      responses:
        '201':
          $ref: '#/components/responses/BulkCreateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '422':
          $ref: '#/components/responses/ValidationErrorResponse'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: User ID
        name:
          type: string
          description: User name
        email:
          type: string
          format: email
          description: User email
        created_at:
          type: string
          format: date-time
          description: User creation timestamp
        updated_at:
          type: string
          format: date-time
          description: User last update timestamp
        status:
          type: string
          enum: [active, inactive, pending]
          description: User status
      required:
        - id
        - name
        - email
        - created_at
        - status

    UserInput:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          description: User name
        email:
          type: string
          format: email
          description: User email
        status:
          type: string
          enum: [active, inactive, pending]
          default: active
          description: User status
      required:
        - name
        - email

    Product:
      type: object
      properties:
        id:
          type: string
          description: Product ID
        name:
          type: string
          description: Product name
        description:
          type: string
          description: Product description
        price:
          type: number
          format: float
          minimum: 0
          description: Product price
        category:
          type: string
          description: Product category
        in_stock:
          type: boolean
          description: Whether product is in stock
        created_at:
          type: string
          format: date-time
          description: Product creation timestamp
      required:
        - id
        - name
        - price
        - category
        - in_stock
        - created_at

    File:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: File ID
        name:
          type: string
          description: File name
        size:
          type: integer
          minimum: 0
          description: File size in bytes
        mime_type:
          type: string
          description: File MIME type
        url:
          type: string
          format: uri
          description: File download URL
        created_at:
          type: string
          format: date-time
          description: File creation timestamp
      required:
        - id
        - name
        - size
        - mime_type
        - url
        - created_at

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        details:
          type: object
          additionalProperties: true
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
      required:
        - error
        - code
        - timestamp

    ValidationError:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        validation_errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                description: Field name
              message:
                type: string
                description: Validation message
              value:
                description: Invalid value
            required:
              - field
              - message
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
      required:
        - error
        - code
        - validation_errors
        - timestamp

  responses:
    ProductResponse:
      description: Product retrieved successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
          examples:
            success:
              summary: Successful product response
              value:
                id: "PR123456"
                name: "Sample Product"
                description: "A sample product for testing"
                price: 29.99
                category: "Electronics"
                in_stock: true
                created_at: "2024-01-15T10:30:00Z"

    MultiFormatFileResponse:
      description: File retrieved successfully in multiple formats
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/File'
          examples:
            json_file:
              summary: JSON file response
              value:
                id: "550e8400-e29b-41d4-a716-446655440000"
                name: "data.json"
                size: 1024
                mime_type: "application/json"
                url: "https://api.example.com/files/550e8400-e29b-41d4-a716-446655440000/download"
                created_at: "2024-01-15T10:30:00Z"
        application/xml:
          schema:
            type: object
            properties:
              file:
                $ref: '#/components/schemas/File'
          examples:
            xml_file:
              summary: XML file response
              value:
                file:
                  id: "550e8400-e29b-41d4-a716-446655440001"
                  name: "data.xml"
                  size: 2048
                  mime_type: "application/xml"
                  url: "https://api.example.com/files/550e8400-e29b-41d4-a716-446655440001/download"
                  created_at: "2024-01-15T10:30:00Z"
        text/plain:
          schema:
            type: string
            description: Plain text file content
          examples:
            text_file:
              summary: Plain text file response
              value: "This is the content of a plain text file."

    NotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            not_found:
              summary: Resource not found
              value:
                error: "Resource not found"
                code: "RESOURCE_NOT_FOUND"
                details:
                  resource_type: "user"
                  resource_id: "123"
                timestamp: "2024-01-15T10:30:00Z"

    BadRequestResponse:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            bad_request:
              summary: Bad request
              value:
                error: "Invalid request parameters"
                code: "BAD_REQUEST"
                details:
                  missing_fields: ["name", "email"]
                timestamp: "2024-01-15T10:30:00Z"

    ValidationErrorResponse:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
          examples:
            validation_error:
              summary: Validation error
              value:
                error: "Validation failed"
                code: "VALIDATION_ERROR"
                validation_errors:
                  - field: "email"
                    message: "Invalid email format"
                    value: "invalid-email"
                  - field: "name"
                    message: "Name is required"
                    value: null
                timestamp: "2024-01-15T10:30:00Z"

    InternalServerErrorResponse:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            internal_error:
              summary: Internal server error
              value:
                error: "Internal server error"
                code: "INTERNAL_ERROR"
                details:
                  request_id: "req-123456"
                timestamp: "2024-01-15T10:30:00Z"

    BulkCreateResponse:
      description: Bulk creation successful
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Success message
              created_count:
                type: integer
                description: Number of items created
              failed_count:
                type: integer
                description: Number of items that failed to create
              created_items:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                description: Successfully created items
              failed_items:
                type: array
                items:
                  type: object
                  properties:
                    index:
                      type: integer
                      description: Index of the failed item
                    error:
                      type: string
                      description: Error message
                    data:
                      $ref: '#/components/schemas/UserInput'
                      description: The data that failed to create
                description: Items that failed to create
            required:
              - message
              - created_count
              - failed_count
              - created_items
              - failed_items
          examples:
            bulk_success:
              summary: Bulk creation successful
              value:
                message: "Bulk creation completed"
                created_count: 2
                failed_count: 1
                created_items:
                  - id: 1
                    name: "John Doe"
                    email: "john.doe@example.com"
                    created_at: "2024-01-15T10:30:00Z"
                    status: "active"
                  - id: 2
                    name: "Jane Smith"
                    email: "jane.smith@example.com"
                    created_at: "2024-01-15T10:30:00Z"
                    status: "active"
                failed_items:
                  - index: 2
                    error: "Email already exists"
                    data:
                      name: "Duplicate User"
                      email: "john.doe@example.com"
                      status: "active"

tags:
  - name: users
    description: User management operations
  - name: products
    description: Product management operations
  - name: files
    description: File management operations
  - name: documents
    description: Document management operations 
